module OpenBLAS
  lib CBLAS
    fun sdsdot = cblas_sdsdot(n : LibC::Int, alpha : LibC::Float, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int)
    fun dsdot = cblas_dsdot(n : LibC::Int, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int)
    fun sdot = cblas_sdot(n : LibC::Int, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int)
    fun ddot = cblas_ddot(n : LibC::Int, x : LibC::Double*, incx : LibC::Int, y : LibC::Double*, incy : LibC::Int)
    fun cdotu = cblas_cdotu(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int)
    fun cdotc = cblas_cdotc(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int)
    fun zdotu = cblas_zdotu(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int)
    fun zdotc = cblas_zdotc(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int)
    fun cdotu_sub = cblas_cdotu_sub(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, ret : Void*)
    fun cdotc_sub = cblas_cdotc_sub(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, ret : Void*)
    fun zdotu_sub = cblas_zdotu_sub(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, ret : Void*)
    fun zdotc_sub = cblas_zdotc_sub(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, ret : Void*)
    fun sasum = cblas_sasum(n : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun dasum = cblas_dasum(n : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun scasum = cblas_scasum(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun dzasum = cblas_dzasum(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun ssum = cblas_ssum(n : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun dsum = cblas_dsum(n : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun scsum = cblas_scsum(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun dzsum = cblas_dzsum(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun snrm2 = cblas_snrm2(n : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun dnrm2 = cblas_dnrm2(n : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun scnrm2 = cblas_scnrm2(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun dznrm2 = cblas_dznrm2(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun isamax = cblas_isamax(n : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun idamax = cblas_idamax(n : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun icamax = cblas_icamax(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun izamax = cblas_izamax(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun isamin = cblas_isamin(n : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun idamin = cblas_idamin(n : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun icamin = cblas_icamin(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun izamin = cblas_izamin(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun ismax = cblas_ismax(n : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun idmax = cblas_idmax(n : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun icmax = cblas_icmax(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun izmax = cblas_izmax(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun ismin = cblas_ismin(n : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun idmin = cblas_idmin(n : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun icmin = cblas_icmin(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun izmin = cblas_izmin(n : LibC::Int, x : Void*, incx : LibC::Int)
    fun saxpy = cblas_saxpy(n : LibC::Int, alpha : LibC::Float, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int)
    fun daxpy = cblas_daxpy(n : LibC::Int, alpha : LibC::Double, x : LibC::Double*, incx : LibC::Int, y : LibC::Double*, incy : LibC::Int)
    fun caxpy = cblas_caxpy(n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int)
    fun zaxpy = cblas_zaxpy(n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int)
    fun scopy = cblas_scopy(n : LibC::Int, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int)
    fun dcopy = cblas_dcopy(n : LibC::Int, x : LibC::Double*, incx : LibC::Int, y : LibC::Double*, incy : LibC::Int)
    fun ccopy = cblas_ccopy(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int)
    fun zcopy = cblas_zcopy(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int)
    fun sswap = cblas_sswap(n : LibC::Int, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int)
    fun dswap = cblas_dswap(n : LibC::Int, x : LibC::Double*, incx : LibC::Int, y : LibC::Double*, incy : LibC::Int)
    fun cswap = cblas_cswap(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int)
    fun zswap = cblas_zswap(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int)
    fun srot = cblas_srot(n : LibC::Int, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int, c : LibC::Float, s : LibC::Float)
    fun drot = cblas_drot(n : LibC::Int, x : LibC::Double*, incx : LibC::Int, y : LibC::Double*, incy : LibC::Int, c : LibC::Double, s : LibC::Double)
    fun csrot = cblas_csrot(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, c : LibC::Float, s : LibC::Float)
    fun zdrot = cblas_zdrot(n : LibC::Int, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, c : LibC::Double, s : LibC::Double)
    fun srotg = cblas_srotg(a : LibC::Float*, b : LibC::Float*, c : LibC::Float*, s : LibC::Float*)
    fun drotg = cblas_drotg(a : LibC::Double*, b : LibC::Double*, c : LibC::Double*, s : LibC::Double*)
    fun crotg = cblas_crotg(a : Void*, b : Void*, c : LibC::Float*, s : Void*)
    fun zrotg = cblas_zrotg(a : Void*, b : Void*, c : LibC::Double*, s : Void*)
    fun srotm = cblas_srotm(n : LibC::Int, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int, p : LibC::Float*)
    fun drotm = cblas_drotm(n : LibC::Int, x : LibC::Double*, incx : LibC::Int, y : LibC::Double*, incy : LibC::Int, p : LibC::Double*)
    fun srotmg = cblas_srotmg(d1 : LibC::Float*, d2 : LibC::Float*, b1 : LibC::Float*, b2 : LibC::Float, p : LibC::Float*)
    fun drotmg = cblas_drotmg(d1 : LibC::Double*, d2 : LibC::Double*, b1 : LibC::Double*, b2 : LibC::Double, p : LibC::Double*)
    fun sscal = cblas_sscal(n : LibC::Int, alpha : LibC::Float, x : LibC::Float*, incx : LibC::Int)
    fun dscal = cblas_dscal(n : LibC::Int, alpha : LibC::Double, x : LibC::Double*, incx : LibC::Int)
    fun cscal = cblas_cscal(n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int)
    fun zscal = cblas_zscal(n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int)
    fun csscal = cblas_csscal(n : LibC::Int, alpha : LibC::Float, x : Void*, incx : LibC::Int)
    fun zdscal = cblas_zdscal(n : LibC::Int, alpha : LibC::Double, x : Void*, incx : LibC::Int)
    fun sgemv = cblas_sgemv(order : CBLAS::Order, trans : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, alpha : LibC::Float, a : LibC::Float*, lda : LibC::Int, x : LibC::Float*, incx : LibC::Int, beta : LibC::Float, y : LibC::Float*, incy : LibC::Int)
    fun dgemv = cblas_dgemv(order : CBLAS::Order, trans : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, alpha : LibC::Double, a : LibC::Double*, lda : LibC::Int, x : LibC::Double*, incx : LibC::Int, beta : LibC::Double, y : LibC::Double*, incy : LibC::Int)
    fun cgemv = cblas_cgemv(order : CBLAS::Order, trans : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun zgemv = cblas_zgemv(order : CBLAS::Order, trans : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun sger = cblas_sger(order : CBLAS::Order, m : LibC::Int, n : LibC::Int, alpha : LibC::Float, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int, a : LibC::Float*, lda : LibC::Int)
    fun dger = cblas_dger(order : CBLAS::Order, m : LibC::Int, n : LibC::Int, alpha : LibC::Double, x : LibC::Double*, incx : LibC::Int, y : LibC::Double*, incy : LibC::Int, a : LibC::Double*, lda : LibC::Int)
    fun cgeru = cblas_cgeru(order : CBLAS::Order, m : LibC::Int, n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, a : Void*, lda : LibC::Int)
    fun cgerc = cblas_cgerc(order : CBLAS::Order, m : LibC::Int, n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, a : Void*, lda : LibC::Int)
    fun zgeru = cblas_zgeru(order : CBLAS::Order, m : LibC::Int, n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, a : Void*, lda : LibC::Int)
    fun zgerc = cblas_zgerc(order : CBLAS::Order, m : LibC::Int, n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, a : Void*, lda : LibC::Int)
    fun strsv = cblas_strsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, a : LibC::Float*, lda : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun dtrsv = cblas_dtrsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, a : LibC::Double*, lda : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun ctrsv = cblas_ctrsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int)
    fun ztrsv = cblas_ztrsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int)
    fun strmv = cblas_strmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, a : LibC::Float*, lda : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun dtrmv = cblas_dtrmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, a : LibC::Double*, lda : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun ctrmv = cblas_ctrmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int)
    fun ztrmv = cblas_ztrmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int)
    fun ssyr = cblas_ssyr(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Float, x : LibC::Float*, incx : LibC::Int, a : LibC::Float*, lda : LibC::Int)
    fun dsyr = cblas_dsyr(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Double, x : LibC::Double*, incx : LibC::Int, a : LibC::Double*, lda : LibC::Int)
    fun cher = cblas_cher(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Float, x : Void*, incx : LibC::Int, a : Void*, lda : LibC::Int)
    fun zher = cblas_zher(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Double, x : Void*, incx : LibC::Int, a : Void*, lda : LibC::Int)
    fun ssyr2 = cblas_ssyr2(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Float, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int, a : LibC::Float*, lda : LibC::Int)
    fun dsyr2 = cblas_dsyr2(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Double, x : LibC::Double*, incx : LibC::Int, y : LibC::Double*, incy : LibC::Int, a : LibC::Double*, lda : LibC::Int)
    fun cher2 = cblas_cher2(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, a : Void*, lda : LibC::Int)
    fun zher2 = cblas_zher2(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, a : Void*, lda : LibC::Int)
    fun sgbmv = cblas_sgbmv(order : CBLAS::Order, transa : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, kl : LibC::Int, ku : LibC::Int, alpha : LibC::Float, a : LibC::Float*, lda : LibC::Int, x : LibC::Float*, incx : LibC::Int, beta : LibC::Float, y : LibC::Float*, incy : LibC::Int)
    fun dgbmv = cblas_dgbmv(order : CBLAS::Order, transa : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, kl : LibC::Int, ku : LibC::Int, alpha : LibC::Double, a : LibC::Double*, lda : LibC::Int, x : LibC::Double*, incx : LibC::Int, beta : LibC::Double, y : LibC::Double*, incy : LibC::Int)
    fun cgbmv = cblas_cgbmv(order : CBLAS::Order, transa : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, kl : LibC::Int, ku : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun zgbmv = cblas_zgbmv(order : CBLAS::Order, transa : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, kl : LibC::Int, ku : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun ssbmv = cblas_ssbmv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, k : LibC::Int, alpha : LibC::Float, a : LibC::Float*, lda : LibC::Int, x : LibC::Float*, incx : LibC::Int, beta : LibC::Float, y : LibC::Float*, incy : LibC::Int)
    fun dsbmv = cblas_dsbmv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, k : LibC::Int, alpha : LibC::Double, a : LibC::Double*, lda : LibC::Int, x : LibC::Double*, incx : LibC::Int, beta : LibC::Double, y : LibC::Double*, incy : LibC::Int)
    fun stbmv = cblas_stbmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, k : LibC::Int, a : LibC::Float*, lda : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun dtbmv = cblas_dtbmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, k : LibC::Int, a : LibC::Double*, lda : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun ctbmv = cblas_ctbmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, k : LibC::Int, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int)
    fun ztbmv = cblas_ztbmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, k : LibC::Int, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int)
    fun stbsv = cblas_stbsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, k : LibC::Int, a : LibC::Float*, lda : LibC::Int, x : LibC::Float*, incx : LibC::Int)
    fun dtbsv = cblas_dtbsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, k : LibC::Int, a : LibC::Double*, lda : LibC::Int, x : LibC::Double*, incx : LibC::Int)
    fun ctbsv = cblas_ctbsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, k : LibC::Int, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int)
    fun ztbsv = cblas_ztbsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, k : LibC::Int, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int)
    fun stpmv = cblas_stpmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, ap : LibC::Float*, x : LibC::Float*, incx : LibC::Int)
    fun dtpmv = cblas_dtpmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, ap : LibC::Double*, x : LibC::Double*, incx : LibC::Int)
    fun ctpmv = cblas_ctpmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, ap : Void*, x : Void*, incx : LibC::Int)
    fun ztpmv = cblas_ztpmv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, ap : Void*, x : Void*, incx : LibC::Int)
    fun stpsv = cblas_stpsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, ap : LibC::Float*, x : LibC::Float*, incx : LibC::Int)
    fun dtpsv = cblas_dtpsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, ap : LibC::Double*, x : LibC::Double*, incx : LibC::Int)
    fun ctpsv = cblas_ctpsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, ap : Void*, x : Void*, incx : LibC::Int)
    fun ztpsv = cblas_ztpsv(order : CBLAS::Order, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, n : LibC::Int, ap : Void*, x : Void*, incx : LibC::Int)
    fun ssymv = cblas_ssymv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Float, a : LibC::Float*, lda : LibC::Int, x : LibC::Float*, incx : LibC::Int, beta : LibC::Float, y : LibC::Float*, incy : LibC::Int)
    fun dsymv = cblas_dsymv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Double, a : LibC::Double*, lda : LibC::Int, x : LibC::Double*, incx : LibC::Int, beta : LibC::Double, y : LibC::Double*, incy : LibC::Int)
    fun chemv = cblas_chemv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun zhemv = cblas_zhemv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun sspmv = cblas_sspmv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Float, ap : LibC::Float*, x : LibC::Float*, incx : LibC::Int, beta : LibC::Float, y : LibC::Float*, incy : LibC::Int)
    fun dspmv = cblas_dspmv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Double, ap : LibC::Double*, x : LibC::Double*, incx : LibC::Int, beta : LibC::Double, y : LibC::Double*, incy : LibC::Int)
    fun sspr = cblas_sspr(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Float, x : LibC::Float*, incx : LibC::Int, ap : LibC::Float*)
    fun dspr = cblas_dspr(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Double, x : LibC::Double*, incx : LibC::Int, ap : LibC::Double*)
    fun chpr = cblas_chpr(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Float, x : Void*, incx : LibC::Int, a : Void*)
    fun zhpr = cblas_zhpr(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Double, x : Void*, incx : LibC::Int, a : Void*)
    fun sspr2 = cblas_sspr2(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Float, x : LibC::Float*, incx : LibC::Int, y : LibC::Float*, incy : LibC::Int, a : LibC::Float*)
    fun dspr2 = cblas_dspr2(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : LibC::Double, x : LibC::Double*, incx : LibC::Int, y : LibC::Double*, incy : LibC::Int, a : LibC::Double*)
    fun chpr2 = cblas_chpr2(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, ap : Void*)
    fun zhpr2 = cblas_zhpr2(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, y : Void*, incy : LibC::Int, ap : Void*)
    fun chbmv = cblas_chbmv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun zhbmv = cblas_zhbmv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun chpmv = cblas_chpmv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : Void*, ap : Void*, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun zhpmv = cblas_zhpmv(order : CBLAS::Order, uplo : CBLAS::UpLo, n : LibC::Int, alpha : Void*, ap : Void*, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun sgemm = cblas_sgemm(order : CBLAS::Order, transa : CBLAS::Transpose, transb : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, k : LibC::Int, alpha : LibC::Float, a : LibC::Float*, lda : LibC::Int, b : LibC::Float*, ldb : LibC::Int, beta : LibC::Float, c : LibC::Float*, ldc : LibC::Int)
    fun dgemm = cblas_dgemm(order : CBLAS::Order, transa : CBLAS::Transpose, transb : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, k : LibC::Int, alpha : LibC::Double, a : LibC::Double*, lda : LibC::Int, b : LibC::Double*, ldb : LibC::Int, beta : LibC::Double, c : LibC::Double*, ldc : LibC::Int)
    fun cgemm = cblas_cgemm(order : CBLAS::Order, transa : CBLAS::Transpose, transb : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun cgemm3m = cblas_cgemm3m(order : CBLAS::Order, transa : CBLAS::Transpose, transb : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun zgemm = cblas_zgemm(order : CBLAS::Order, transa : CBLAS::Transpose, transb : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun zgemm3m = cblas_zgemm3m(order : CBLAS::Order, transa : CBLAS::Transpose, transb : CBLAS::Transpose, m : LibC::Int, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun ssymm = cblas_ssymm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, m : LibC::Int, n : LibC::Int, alpha : LibC::Float, a : LibC::Float*, lda : LibC::Int, b : LibC::Float*, ldb : LibC::Int, beta : LibC::Float, c : LibC::Float*, ldc : LibC::Int)
    fun dsymm = cblas_dsymm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, m : LibC::Int, n : LibC::Int, alpha : LibC::Double, a : LibC::Double*, lda : LibC::Int, b : LibC::Double*, ldb : LibC::Int, beta : LibC::Double, c : LibC::Double*, ldc : LibC::Int)
    fun csymm = cblas_csymm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, m : LibC::Int, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun zsymm = cblas_zsymm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, m : LibC::Int, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun ssyrk = cblas_ssyrk(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : LibC::Float, a : LibC::Float*, lda : LibC::Int, beta : LibC::Float, c : LibC::Float*, ldc : LibC::Int)
    fun dsyrk = cblas_dsyrk(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : LibC::Double, a : LibC::Double*, lda : LibC::Int, beta : LibC::Double, c : LibC::Double*, ldc : LibC::Int)
    fun csyrk = cblas_csyrk(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun zsyrk = cblas_zsyrk(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun ssyr2k = cblas_ssyr2k(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : LibC::Float, a : LibC::Float*, lda : LibC::Int, b : LibC::Float*, ldb : LibC::Int, beta : LibC::Float, c : LibC::Float*, ldc : LibC::Int)
    fun dsyr2k = cblas_dsyr2k(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : LibC::Double, a : LibC::Double*, lda : LibC::Int, b : LibC::Double*, ldb : LibC::Int, beta : LibC::Double, c : LibC::Double*, ldc : LibC::Int)
    fun csyr2k = cblas_csyr2k(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun zsyr2k = cblas_zsyr2k(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun strmm = cblas_strmm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, m : LibC::Int, n : LibC::Int, alpha : LibC::Float, a : LibC::Float*, lda : LibC::Int, b : LibC::Float*, ldb : LibC::Int)
    fun dtrmm = cblas_dtrmm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, m : LibC::Int, n : LibC::Int, alpha : LibC::Double, a : LibC::Double*, lda : LibC::Int, b : LibC::Double*, ldb : LibC::Int)
    fun ctrmm = cblas_ctrmm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, m : LibC::Int, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int)
    fun ztrmm = cblas_ztrmm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, m : LibC::Int, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int)
    fun strsm = cblas_strsm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, m : LibC::Int, n : LibC::Int, alpha : LibC::Float, a : LibC::Float*, lda : LibC::Int, b : LibC::Float*, ldb : LibC::Int)
    fun dtrsm = cblas_dtrsm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, m : LibC::Int, n : LibC::Int, alpha : LibC::Double, a : LibC::Double*, lda : LibC::Int, b : LibC::Double*, ldb : LibC::Int)
    fun ctrsm = cblas_ctrsm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, m : LibC::Int, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int)
    fun ztrsm = cblas_ztrsm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, transa : CBLAS::Transpose, diag : CBLAS::Diag, m : LibC::Int, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int)
    fun chemm = cblas_chemm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, m : LibC::Int, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun zhemm = cblas_zhemm(order : CBLAS::Order, side : CBLAS::Side, uplo : CBLAS::UpLo, m : LibC::Int, n : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : Void*, c : Void*, ldc : LibC::Int)
    fun cherk = cblas_cherk(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : LibC::Float, a : Void*, lda : LibC::Int, beta : LibC::Float, c : Void*, ldc : LibC::Int)
    fun zherk = cblas_zherk(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : LibC::Double, a : Void*, lda : LibC::Int, beta : LibC::Double, c : Void*, ldc : LibC::Int)
    fun cher2k = cblas_cher2k(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : LibC::Float, c : Void*, ldc : LibC::Int)
    fun zher2k = cblas_zher2k(order : CBLAS::Order, uplo : CBLAS::UpLo, trans : CBLAS::Transpose, n : LibC::Int, k : LibC::Int, alpha : Void*, a : Void*, lda : LibC::Int, b : Void*, ldb : LibC::Int, beta : LibC::Double, c : Void*, ldc : LibC::Int)
    fun xerbla = cblas_xerbla(p : LibC::Int, rout : LibC::Char*, form : LibC::Char*)
    fun saxpby = cblas_saxpby(n : LibC::Int, alpha : LibC::Float, x : LibC::Float*, incx : LibC::Int, beta : LibC::Float, y : LibC::Float*, incy : LibC::Int)
    fun daxpby = cblas_daxpby(n : LibC::Int, alpha : LibC::Double, x : LibC::Double*, incx : LibC::Int, beta : LibC::Double, y : LibC::Double*, incy : LibC::Int)
    fun caxpby = cblas_caxpby(n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun zaxpby = cblas_zaxpby(n : LibC::Int, alpha : Void*, x : Void*, incx : LibC::Int, beta : Void*, y : Void*, incy : LibC::Int)
    fun somatcopy = cblas_somatcopy(corder : CBLAS::Order, ctrans : CBLAS::Transpose, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Float, a : LibC::Float*, clda : LibC::Int, b : LibC::Float*, cldb : LibC::Int)
    fun domatcopy = cblas_domatcopy(corder : CBLAS::Order, ctrans : CBLAS::Transpose, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Double, a : LibC::Double*, clda : LibC::Int, b : LibC::Double*, cldb : LibC::Int)
    fun comatcopy = cblas_comatcopy(corder : CBLAS::Order, ctrans : CBLAS::Transpose, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Float*, a : LibC::Float*, clda : LibC::Int, cldb : LibC::Int)
    fun zomatcopy = cblas_zomatcopy(corder : CBLAS::Order, ctrans : CBLAS::Transpose, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Double*, a : LibC::Double*, clda : LibC::Int, b : LibC::Double*, cldb : LibC::Int)
    fun simatcopy = cblas_simatcopy(corder : CBLAS::Order, ctrans : CBLAS::Transpose, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Float, a : LibC::Float*, clda : LibC::Int, cldb : LibC::Int)
    fun dimatcopy = cblas_dimatcopy(corder : CBLAS::Order, ctrans : CBLAS::Transpose, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Double, a : LibC::Double*, clda : LibC::Int, cldb : LibC::Int)
    fun cimatcopy = cblas_cimatcopy(corder : CBLAS::Order, ctrans : CBLAS::Transpose, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Float*, a : LibC::Float*, clda : LibC::Int, cldb : LibC::Int)
    fun zimatcopy = cblas_zimatcopy(corder : CBLAS::Order, ctrans : CBLAS::Transpose, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Double*, a : LibC::Double*, clda : LibC::Int, cldb : LibC::Int)
    fun sgeadd = cblas_sgeadd(corder : CBLAS::Order, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Float, a : LibC::Float*, clda : LibC::Int, cbeta : LibC::Float, c : LibC::Float*, cldc : LibC::Int)
    fun dgeadd = cblas_dgeadd(corder : CBLAS::Order, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Double, a : LibC::Double*, clda : LibC::Int, cbeta : LibC::Double, c : LibC::Double*, cldc : LibC::Int)
    fun cgeadd = cblas_cgeadd(corder : CBLAS::Order, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Float*, a : LibC::Float*, clda : LibC::Int, cbeta : LibC::Float*, c : LibC::Float*, cldc : LibC::Int)
    fun zgeadd = cblas_zgeadd(corder : CBLAS::Order, crows : LibC::Int, ccols : LibC::Int, calpha : LibC::Double*, a : LibC::Double*, clda : LibC::Int, cbeta : LibC::Double*, c : LibC::Double*, cldc : LibC::Int)
    # Excluded sbstobf16 because the type `bfloat16` is not defined in this library.
    # Excluded sbdtobf16 because the type `bfloat16` is not defined in this library.
    # Excluded sbf16tos because the type `bfloat16` is not defined in this library.
    # Excluded dbf16tod because the type `bfloat16` is not defined in this library.
    # Excluded sbdot because the type `bfloat16` is not defined in this library.
    # Excluded sbgemv because the type `bfloat16` is not defined in this library.
    # Excluded sbgemm because the type `bfloat16` is not defined in this library.
  end
end
